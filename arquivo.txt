import pandas as pd
import numpy as np
from scipy.stats import linregress

x = np.array(preco_distribuicao)
y_tendencia = slope * x + intercept

plt.figure(figsize=(10, 6))
plt.scatter(preco_distribuicao, preco_revenda, color='blue', label='Dados Observados')
plt.plot(x, y_tendencia, color='red', label='Linha de Tend�ncia')

plt.text(min(x) + 0.1, max(preco_revenda) - 0.1, f'y = {slope:.4f}x + {intercept:.4f}', fontsize=12, color='red')

plt.title('Regress�o Linear entre Pre�o Distribui��o e Pre�o Revenda')
plt.xlabel('Pre�o Distribui��o (R$)')
plt.ylabel('Pre�o Revenda (R$)')
plt.legend()
plt.grid(True)
plt.show()



preco_distribuicao_nova_andradina = [4.89, 5.08, 5.27, 5.19, 5.12, 5.06, 5.02, 5.17, 5.22, 5.24]
preco_revenda_nova_andradina = [5.87, 6.08, 6.21, 6.22, 6.19, 6.17, 6.10, 6.03, 6.09, 6.10]

df = pd.DataFrame({
� � 'Pre�o Distribui��o (R$)': preco_distribuicao_nova_andradina,
� � 'Pre�o Revenda (R$)': preco_revenda_nova_andradina
})

correlacao = df.corr()
slope, intercept, r_value, p_value, std_err = linregress(preco_distribuicao_nova_andradina, preco_revenda_nova_andradina)

# Imprimir os resultados
print(f'Correla��o entre Pre�o Distribui��o e Pre�o Revenda: \n{correlacao}\n')
print(f'Coeficiente angular (slope): {slope}')
print(f'Intercepto (intercept): {intercept}')
print(f'Coeficiente de determina��o (R�): {r_value**2}')


PONTA PORÃ:
preco_distribuicao = [4.92, 5.09, 5.29, 5.21, 5.10, 5.05, 5.03, 5.22, 5.28, 5.29]
preco_revenda = [5.66, 5.89, 6.08, 6.05, 5.92, 5.84, 5.80, 5.90, 5.99, 6.00]